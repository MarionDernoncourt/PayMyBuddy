<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureException"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwtClaimsSet"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="java.time.temporal.ChronoUnit"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwtEncoderParameters"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwsHeader"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jose.jws.MacAlgorithm"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.NimbusJwtDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.NimbusJwtEncoder"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.source.JWKSource"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.source.ImmutableSecret"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.dto.LoginUserDTO"/>
    <fullyQualifiedTypeName name="org.hibernate.Hibernate"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.mockito.MockitoAnnotations"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.dto.FriendDTO"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.Jwt"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.model.User"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.net.openssl.ciphers.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="java.lang.SecurityException"/>
    <fullyQualifiedTypeName name="java.security.Principal"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.security.MyUserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.repository.UserRepository"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.model.Transaction"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.test.context.ActiveProfiles"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.service.UserService"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.service.TransactionService"/>
    <fullyQualifiedTypeName name="com.paymybuddy.backend.dto.TransactionDTO"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
</qualifiedTypeNameHistroy>
