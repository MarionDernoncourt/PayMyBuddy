package com.paymybuddy.backend.controller;

import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.math.BigDecimal;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.security.oauth2.jwt.Jwt;
import org.springframework.security.oauth2.jwt.JwtDecoder;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;

import com.paymybuddy.backend.dto.TransactionDTO;
import com.paymybuddy.backend.model.Transaction;
import com.paymybuddy.backend.service.TransactionService;

@SpringBootTest
@AutoConfigureMockMvc
@ActiveProfiles("test")
public class TransactionControllerIT {

	@Autowired
	private MockMvc mockMvc;
	@MockBean
	TransactionService transactionService;
	@MockBean
	private JwtDecoder jwtDecoder;

	@BeforeEach
	void setUp() {
		Jwt jwt = Jwt.withTokenValue("mock-token").header("alg", "none").claim("sub", "test-user")
				.claim("scope", "read write").build();

		when(jwtDecoder.decode("mock-token")).thenReturn(jwt);
	}

	@Test
	public void testGetUserTransactions() throws Exception {
		
	String username = "username";
	
	TransactionDTO transaction = new TransactionDTO("description", BigDecimal.valueOf(100.0), "sender@gmail.com", "receiver@gmail.com");
	
	List<TransactionDTO> transactions = List.of(new TransactionDTO("description", BigDecimal.valueOf(100.0), "sender@gmail.com", "receiver@gmail.com"));
	
	when(transactionService.getUserTransactions(username)).thenReturn(transactions);
	
	mockMvc.perform(get("/api/transactions")).andExpect(status().isOk());
	}

}
