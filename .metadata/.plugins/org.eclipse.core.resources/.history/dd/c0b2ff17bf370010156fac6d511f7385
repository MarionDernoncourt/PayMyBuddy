package com.paymybuddy.backend.service;

import static org.mockito.Mockito.when;

import java.util.List;
import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.paymybuddy.backend.model.Transaction;
import com.paymybuddy.backend.model.User;
import com.paymybuddy.backend.repository.TransactionRepository;
import com.paymybuddy.backend.repository.UserRepository;

@ExtendWith(MockitoExtension.class)
public class TransactionServiceTest {
	
	@Mock
	private TransactionRepository transactionRepository;
	@InjectMocks
	private TransactionService transactionService;
	@Mock
	private UserRepository userRepository;
	
	
	@BeforeEach
	void setUp() {
        transactionService = new TransactionService(userRepository, transactionRepository);

	}
	
	@Test
	public void getUserTransactions() {
		User user = new User() ;
		user.setId(1);
		user.setUsername("username");
		user.setEmail("user@gmail.com");
		
		when(userRepository.findByUsernameIgnoreCase("username")).thenReturn(Optional.of(user));
		List<Transaction> transaction = transactionRepository.findBySenderOrReceiver(user, user);
		
		
	}

}
