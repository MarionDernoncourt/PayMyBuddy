package com.paymybuddy.backend.service;

import org.springframework.stereotype.Service;

import com.paymybuddy.backend.dto.LoginUserDTO;
import com.paymybuddy.backend.dto.ValidLoginUserDTO;
import com.paymybuddy.backend.model.User;
import com.paymybuddy.backend.repository.UserRepository;
import com.paymybuddy.backend.security.JwtUtils;
import com.paymybuddy.backend.security.PasswordUtils;

@Service
public class AuthService {

	private final UserRepository userRepository;
	private final PasswordUtils passwordUtils;
	private final JwtUtils jwtUtils;

	public AuthService(UserRepository userRepository, PasswordUtils passwordUtils, JwtUtils jwtUtils) {
		this.userRepository = userRepository;
		this.passwordUtils = passwordUtils;
		this.jwtUtils = jwtUtils;
	}

	public ValidLoginUserDTO login(LoginUserDTO loginUser) {
		User user = userRepository.findByEmailIgnoreCase(loginUser.getEmail())
				.orElseThrow(() -> new IllegalArgumentException("Utilisateur non trouv√©"));
		
		if(!passwordUtils.verifyPassword(loginUser.getPassword(), user.getPassword())) {
			throw new IllegalArgumentException("Mot de passe incorrect");
		}
		
		String token = jwtUtils.generateJwtToken(user.getUsername());
		
		return new ValidLoginUserDTO(user.getUsername(), user.getEmail(), token);
	}

}
